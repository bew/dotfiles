local U = require"mylib.utils"
local _f = U.str_space_concat
local _q = U.str_simple_quote_surround

local UC = {}

local SMALLCAPS_CHARS = {
  a = "·¥Ä",
  b = " ô",
  c = "·¥Ñ",
  d = "·¥Ö",
  e = "·¥á",
  f = "Íú∞",
  g = "…¢",
  h = " ú",
  i = "…™",
  j = "·¥ä",
  k = "·¥ã",
  l = " ü",
  m = "·¥ç",
  n = "…¥",
  o = "·¥è",
  p = "·¥ò",
  q = "ÍûØ",
  r = " Ä",
  s = "Íú±",
  t = "·¥õ",
  u = "·¥ú",
  v = "·¥†",
  w = "·¥°",
  x = "‚Äì",
  y = " è",
  z = "·¥¢",
}

--- Replace text with smallcaps glyphs (unsupported chars will be left as-is)
UC.smallcaps = function(text)
  local result = ""
  for _, c in U.iter_chars(text) do
    if SMALLCAPS_CHARS[c] then
      result = result .. SMALLCAPS_CHARS[c]
    else
      result = result .. c
    end
  end
  return result
end

local SUPERSCRIPT_CHARS = {
  A = "·¥¨", B = "·¥Æ", C = "Íü≤", D = "·¥∞", E = "·¥±", F = "Íü≥", G = "·¥≥", H = "·¥¥", I = "·¥µ", J = "·¥∂", K = "·¥∑", L = "·¥∏", M = "·¥π", N = "·¥∫", O = "·¥º", P = "·¥æ", Q = "Íü¥", R = "·¥ø", S = "Íü±", T = "·µÄ", U = "·µÅ", V = "‚±Ω", W = "·µÇ",
  -- XYZ don't exist.. :/
  -- X = "", Y = "", Z = "",

  a = "·µÉ", b = "·µá", c = "·∂ú", d = "·µà", e = "·µâ", f = "·∂†", g = "·µç", h = " ∞", i = "‚Å±", j = " ≤", k = "·µè", l = "À°", m = "·µê", n = "‚Åø", o = "·µí", p = "·µñ", q = "êû•", r = " ≥", s = "À¢", t = "·µó", u = "·µò", v = "·µõ", w = " ∑", x = "À£", y = " ∏", z = "·∂ª",

  ["0"] = "‚Å∞", ["1"] = "¬π", ["2"] = "¬≤", ["3"] = "¬≥", ["4"] = "‚Å¥", ["5"] = "‚Åµ", ["6"] = "‚Å∂", ["7"] = "‚Å∑", ["8"] = "‚Å∏", ["9"] = "‚Åπ", ["+"] = "‚Å∫",
  ["-"] = "‚Åª", ["="] = "‚Åº", ["("] = "‚ÅΩ", [")"] = "‚Åæ",
}

--- Replace text with superscript glyphs, above font baseline (unsupported chars will error out)
UC.superscript = function(text)
  local result = ""
  for _, c in U.iter_chars(text) do
    if SUPERSCRIPT_CHARS[c] then
      result = result .. SUPERSCRIPT_CHARS[c]
    else
      error(_f("Superscript char", _q(c), "is not supported"))
    end
  end
  return result
end

local SUBSCRIPT_CHARS = {
  ["0"] = "‚ÇÄ", ["1"] = "‚ÇÅ", ["2"] = "‚ÇÇ", ["3"] = "‚ÇÉ", ["4"] = "‚ÇÑ", ["5"] = "‚ÇÖ", ["6"] = "‚ÇÜ", ["7"] = "‚Çá", ["8"] = "‚Çà", ["9"] = "‚Çâ",
  ["+"] = "‚Çä", ["-"] = "‚Çã", ["="] = "‚Çå", ["("] = "‚Çç", [")"] = "‚Çé",
}

--- Replace text with subscript glyphs, above font baseline (only numbers & unsupported chars will error out)
UC.subscript = function(text)
  local result = ""
  for _, c in U.iter_chars(text) do
    if SUBSCRIPT_CHARS[c] then
      result = result .. SUBSCRIPT_CHARS[c]
    else
      error(_f("Subscript char", _q(c), "is not supported"))
    end
  end
  return result
end

return UC
