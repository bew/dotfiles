#!/usr/bin/env bash

# Binary dependencies:
# - polybar
# - pkill

# Safer shell script with these options
# -e          : exit if a command exits with non-zero status
# -u          : exit if an expanded variable does not exist
# -o pipefail : if a command in a pipeline fail, fail the pipeline
#               (e.g this now fails: false | true)
set -euo pipefail

if pgrep polybar >/dev/null; then
  echo script: Killing existing panels
  pkill polybar
  sleep 2 # wait for all instances to end
fi

echo script: Starting panels

monitors=($(xrandr --query | awk '/ connected/ { print $1 }'))
primary_monitor="${monitors[0]}" # xrandr puts the primary first
unset monitors[0] # remove the primary monitor

echo
echo ">>> Monitor detection:"
echo "primary: $primary_monitor"
echo "other:   ${monitors[@]}"
echo

function run_bars
{
  polybar info-bar --reload &
  polybar sys-bar --reload &
}

# Start bars on Primary monitor
MONITOR_NAME="$primary_monitor" run_bars
# Wait a little to ensure the bars starts up, and the systray is
# properly grabbed/managed by the bars of primary monitor.
# Without this, the bars of another monitor could race it and manage
# the systray before primary' bars.
sleep .1

# Start bars on other monitors if any
for mon in "${monitors[@]}"; do
  MONITOR_NAME="$mon" run_bars
done

wait

echo script: all panels terminated
