#!/usr/bin/env bash

# Safer shell script with these options
# -e          : exit if a command exits with non-zero status
# -u          : exit if an expanded variable does not exist
# -o pipefail : if a command in a pipeline fail, fail the pipeline
#               (e.g this now fails: false | true)
set -euo pipefail

function countdown
{
  local quit
  trap 'echo; quit=1' SIGINT # Prevent lost result on ^C

  local from_seconds=$1
  if [ -z "$from_seconds" ]; then
    from_seconds=60
  fi

  local original_timestamp=$(( `date +%s` + $from_seconds ))

  echo "Counting down from ${from_seconds}s"

  while [ "$original_timestamp" -ge `date +%s` ] && [ -z $quit ]; do
    echo -ne "$(date -u --date @$(( $original_timestamp - `date +%s` )) +%M:%S)\r"
    sleep .1
  done

  date -u --date @$(( $original_timestamp - `date +%s` )) +%M:%S
}

countdown
